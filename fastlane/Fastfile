# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.53.0"

default_platform :ios

platform :ios do

  before_all do
    cocoapods
  end

  desc "Runs all the tests"
  lane :test do
    scan(scheme: "fastlanetodo")
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    
    clean_build_artifacts
    
    match(
      type: "appstore",
      readonly: is_ci
    )
    
    increment_build_number
    
    buildNumber = get_build_number(xcodeproj: "fastlanetodo.xcodeproj")
    
    gym(
      workspace: "fastlanetodo.xcworkspace",
      scheme: "appstore",
      output_directory: "./build/#{buildNumber}"
    )
    
    pilot
    
    commit_version_bump(
      message: "Version Bump to #{buildNumber} [ci-skip]",
      force: true
    )
    
    add_git_tag(tag: "Build_#{buildNumber}")
    
    push_to_git_remote
  end

  desc "Take screenshots on all devices"
  lane :screens do
    
    scheme = "appstore"
    workspace = "fastlanetodo.xcworkspace"
    
    match(
      type: "appstore",
      readonly: is_ci
    )
    
    snapshot(
      scheme: scheme,
      workspace: workspace
    )
  end

  after_all do |lane|
    
      if is_ci
        hipchat(
          message: "#{lane} lane successful!"
        )
      else
        notification(message: "#{lane} lane successful!")
      end
  end

  error do |lane, exception|
    
    puts "failing error: #{exception.message}"
    
    if is_ci
      hipchat(
        message: exception.message,
        success: false
      )
    else
      notification(subtitle: exception.message, message: "Build failed")
    end
  end
end
